#!/bin/bash

source scripts/util.sh
source ./.idv-config

vm_dir=/var/vm

function create_vm_dir() {
(mkdir -p {$vm_dir,$vm_dir/fw,$vm_dir/disk,$vm_dir/iso,$vm_dir/scripts})
}

function build_fw_directory() {
  [[ -f /usr/share/qemu/bios.bin ]] && run_as_root "cp /usr/share/qemu/bios.bin $vm_dir/fw" \
      || echo "Error: can't find /usr/share/qemu/bios.bin file"
  [[ -f /usr/share/qemu/OVMF.fd ]] && run_as_root "cp /usr/share/qemu/OVMF.fd $vm_dir/fw" \
      || echo "Error: can't find /usr/share/qemu/OVMF.fd file"
}

CREATE_VGPU="/var/vm/create-vgpu.sh"
INSTALL_GUEST="/var/vm/install-guest.sh"
START_GUEST="/var/vm/start-guest.sh"

gvt_disp_ports_mask="/sys/class/drm/card0/gvt_disp_ports_mask"
mdev_dir="/sys/bus/pci/devices/0000:00:02.0/mdev_supported_types"

function build_create_vgpu() {
  unset temp

  temp+=( "#!/bin/bash" )

  temp+=( "# This file is auto generated by IDV setup.sh file." )
  # set VGPU
  vgpu_opt=($(grep "VGPU" $idv_config_file))
  temp+=( "${vgpu_opt[@]}" )

  # set port mask
  opt=($(grep "port_mask=" $idv_config_file))
  temp+=( "echo \"${opt#*=}\" > $gvt_disp_ports_mask" )

  for i in ${vgpu_opt[@]}; do
    temp+=( "echo \"${i%%=*}\" > $mdev_dir/$mdev_type/create" )
  done

  printf "%s\n"  "Creating $CREATE_VGPU file.. " 
  printf "%s\n"  "${temp[@]}" > ./temp_file
  run_as_root "cp ./temp_file $CREATE_VGPU"
  run_as_root "chmod +x $CREATE_VGPU"
  $(rm temp_file)
}

function build_install_qemu_batch() {
  unset temp
  temp+=( "#!/bin/bash" )
  temp+=( "# This file is auto generated by IDV setup.sh file." )
  temp+=( "/usr/local/bin/qemu-system-x86_64 \\" )
  temp+=( "-m 4096 -smp 1 -M q35 \\" )
  temp+=( "-enable-kvm \\" )
  temp+=( "-name ubuntu-guest \\" )
  temp+=( "-boot d \\" )
  temp+=( "-cdrom $cdir/ubuntu18.iso \\" )
  temp+=( "-drive file=$vm_dir/disk/ubuntu18-ovmf.qcow2 \\" )
  fw_opt=($(grep "FW=" $idv_config_file))

  temp+=( "-bios ${fw_opt#*=} \\" )
  temp+=( "-cpu host -usb -device usb-tablet \\" )
  temp+=( "-vga cirrus \\" )
  temp+=( "-k en-us \\" )
  temp+=( "-vnc :0" )

  printf "%s\n"  "Creating $INSTALL_GUEST file.. " 
  printf "%s\n"  "${temp[@]}" > ./temp_file
  run_as_root "cp ./temp_file $INSTALL_GUEST"
  run_as_root "chmod +x $INSTALL_GUEST"
  $(rm temp_file)
}

gfx_device="/sys/bus/pci/devices/0000:00:02.0"
function build_start_qemu_batch() {
  unset temp

  temp+=( "#!/bin/bash -x" )
  temp+=( "# This file is auto generated by IDV setup.sh file." )
  temp+=( "/usr/bin/qemu-system-x86_64 \\" )
  temp+=( "-m 4096 -smp 1 -M q35 \\" )
  temp+=( "-enable-kvm \\" )
  temp+=( "-name ubuntu-guest \\" )
  temp+=( "-hda /home/snuc/vm/disk/ubuntu18-ovmf.qcow2 \\" )
  temp+=( "-bios /home/snuc/vm/fw/OVMF-pure-efi.fd \\" )
  temp+=( "-cpu host -usb -device usb-tablet \\" )
  temp+=( "-vga none \\" )
  temp+=( "-k en-us \\" )
  temp+=( "-vnc :0 \\" )
  temp+=( "-cpu host -usb -device usb-tablet \\" )
  vgpu_opt=($(grep "VGPU" $idv_config_file))
  
  temp+=( "-device vfio-pci,sysfsdev=$gfx_device/$VGPU1,display=off,x-igd-opregion=on \\" )
  temp+=( "-device usb-host,hostbus=1,hostport=3 \\" )
  temp+=( "-device usb-host,hostbus=2,hostport=4.4" )

  printf "%s\n"  "Creating $START_GUEST file.. " 
  printf "%s\n"  "${temp[@]}" > ./temp_file
  run_as_root "cp ./temp_file $START_GUEST"
  run_as_root "chmod +x $START_GUEST"
  $(rm temp_file)
}

function get_user_option() {

}


create_vm_dir
build_fw_directory
build_create_vgpu
build_install_qemu_batch
build_start_qemu_batch
