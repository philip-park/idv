#!/bin/bash

source ./scripts/util.sh
source ./.idv-config

CREATE_VGPU="$vmdir/scripts/create-vgpu.sh"
INSTALL_GUEST="$vmdir/install-guest"
START_GUEST="$vmdir/start-guest"
TEMP_FILE="$cdir/temp_file"

gvt_disp_ports_mask="/sys/class/drm/card0/gvt_disp_ports_mask"
mdev_dir="/sys/bus/pci/devices/0000:00:02.0/mdev_supported_types"

function build_create_vgpu() {
  unset temp
#  vgpuinfo=$1

  temp+=( "#!/bin/bash" )

  temp+=( "# This file is auto generated by IDV setup.sh file." )
  # set VGPU
  vgpu_opt=($(grep "^VGPU" $idv_config_file))
  temp+=( "${vgpu_opt[@]}" )

  # set port mask
  opt=($(grep "port_mask=" $idv_config_file))
  temp+=( "echo \"${opt#*=}\" > $gvt_disp_ports_mask" )

  for i in ${vgpu_opt[@]}; do
    temp+=( "echo \"\$${i%%=*}\" > $mdev_dir/$mdev_type/create" )
  done

  printf "%s\n"  "Creating $CREATE_VGPU file.. " 
  printf "%s\n"  "${temp[@]}" > $TEMP_FILE
  run_as_root "cp $TEMP_FILE $CREATE_VGPU"
  run_as_root "chmod +x $CREATE_VGPU"
  $(rm $TEMP_FILE)
}

function build_install_qemu_batch() {
  vgpu=$1
  low_vgpu="$( echo $vgpu | tr '[:upper:]' '[:lower:]' )"
  unset str
echo "install qemu: $vgpu"
  str+=( "#!/bin/bash" )
  str+=( "# This file is auto generated by IDV setup.sh file." )
  str+=( "/usr/bin/qemu-system-x86_64 \\" )
  str+=( "-m 4096 -smp 1 -M q35 \\" )
  str+=( "-enable-kvm \\" )

  qcow_opt=($(grep "GUEST_QCOW2_$vgpu" $idv_config_file))
  filename=${qcow_opt##*/}
  IFS='.' read fname fext <<< "${filename}"
  str+=( "-name  $fname \\" )
  str+=( "-boot d \\" )

  opt=($(grep "GUEST_ISO_$vgpu=" $idv_config_file))
  str+=( "-cdrom ${opt##*=} \\" )
  temp=${qcow_opt##*=}
  str+=( "-drive file=${temp%.*}.$fext \\" )

  fw_opt=($(grep "FW_$vgpu" $idv_config_file))
  str+=( "-bios ${fw_opt##*=} \\" )

  str+=( "-cpu host -usb -device usb-tablet \\" )
  str+=( "-vga cirrus \\" )
  str+=( "-k en-us \\" )
  str+=( "-vnc :0" )

  printf "%s\n"  "Creating $INSTALL_GUEST-$low_vgpu.sh file.. "
  printf "%s\n"  "${str[@]}" > $TEMP_FILE
  run_as_root "cp $TEMP_FILE $INSTALL_GUEST-$low_vgpu.sh"
  run_as_root "chmod +x $INSTALL_GUEST-$low_vgpu.sh"
  $(rm $TEMP_FILE)
}

gfx_device="/sys/bus/pci/devices/0000:00:02.0"
function build_start_qemu_batch() {
  vgpu=$1
  low_vgpu="$( echo $vgpu | tr '[:upper:]' '[:lower:]' )"

  unset str

O_IFS=${IFS}
IFS=$'\n'
  str+=( "#!/bin/bash -x" )
  str+=( "# This file is auto generated by IDV setup.sh file." )
  str+=( "/usr/bin/qemu-system-x86_64 \\" )
  str+=( "-m 4096 -smp 1 -M q35 \\" )
  str+=( "-enable-kvm \\" )


  qcow_opt=($(grep "GUEST_QCOW2_$vgpu" $idv_config_file))
  filename=${qcow_opt##*/}
  IFS='.' read fname fext <<< "${filename}"
  str+=( "-name  $fname \\" )

  temp=${qcow_opt##*=}
  str+=( "-hda ${temp%.*}.$fext \\" )

  fw_opt=($(grep "FW_$vgpu" $idv_config_file))
  str+=( "-bios ${fw_opt##*=} \\" )

  str+=( "-cpu host -usb -device usb-tablet \\" )
  str+=( "-vga none \\" )
  str+=( "-k en-us \\" )
  str+=( "-vnc :0 \\" )
  str+=( "-cpu host -usb -device usb-tablet \\" )

  usb_opt=($(grep "^QEMU_USB_$vgpu" $idv_config_file | grep -oP '(?<=").*(?=")')) # remove double quote from option sting
  [[ ! -z $usb_opt ]] && str+=( "$usb_opt \\" )

  vgpu_guid=($(grep "^$vgpu" $idv_config_file))

  if [[ -z $vgpu_guid ]]; then
    unset str          # if there is no GUID set for startup file, then clear the $str
    str+=("GUID is not set. Re-run the config.sh")
  else
    str+=( "-device vfio-pci,sysfsdev=$gfx_device/${vgpu_guid#*=},display=off,x-igd-opregion=on" )
  fi

  printf "%s\n"  "Creating $START_GUEST-$low_vgpu.sh file.. "
  printf "%s\n"  "${str[@]}" > $TEMP_FILE
  run_as_root "cp $TEMP_FILE $START_GUEST-$low_vgpu.sh"
  run_as_root "chmod +x $START_GUEST-$low_vgpu.sh"
IFS=${O_IFS}
  $(rm $TEMP_FILE)
}


function create_files() {
  local vgpuinfo=$1
  echo "create_file: temp: $vgpuinfo, $cdir"

  dialog --yesno "Continue to overwrite $vmdir?" 10 40 
  if [[ $? -eq 0 ]]; then
#    build_fw_directory
#    build_create_vgpu "$vgpuinfo"
    build_install_qemu_batch "$vgpuinfo"
    build_start_qemu_batch "$vgpuinfo"
  fi
}

