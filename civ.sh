#!/bin/bash

source ./scripts/util.sh

CIV_WORK_DIR=$builddir/civ
install_dir=/var/vm/civ
CIV_INSTALL_FOLDER=/var/vm/civ
CIV_SHARE_FOLDER=/var/vm/civ/share_folder

install_pkgs "thermald dmidecode mtools python3-usb python3-pyudev unzip ovmf pulseaudio jq"

function pull_scripts() {
  cd $builddir/civ

  wget https://github.com/projectceladon/celadon-binary/raw/master/CIV_00.20.02.24_A10/caas-ota-QMm000000.zip
  wget https://github.com/projectceladon/celadon-binary/raw/master/CIV_00.20.02.24_A10/caas-releasefiles-userdebug.tar.gz

  tar -xvf caas-releasefiles-userdebug.tar.gz
}


function save_deleteme() {
# Setup environment variable
s="export CIV_WORK_DIR"
if grep  -q "$s" /etc/environment; then
  sudo sed -i "/^$s.*/c $s=$(pwd)" /etc/environment
else
  grep -q "^$s" /etc/environment || (sudo echo "$s=$(pwd)" >> /etc/environment)
fi
CIV_WORK_DIR=$(pwd)
install_dir=/var/vm/civ
CIV_INSTALL_FOLDER=/var/vm/civ
CIV_SHARE_FOLDER=/var/vm/civ/share_folder

install_pkgs "wget mtools ovmf dmidecode python3-usb python3-pyudev pulseaudio jq"
}

function install_9p_module(){
	echo "installing 9p kernel modules for file-sharing"
	sudo modprobe 9pnet
	sudo modprobe 9pnet_virtio
	sudo modprobe 9p
	run_as_root "mkdir -p $CIV_SHARE_FOLDER"
}


function prepare_required_scripts(){
	run_as_root "mkdir -m a=rwx -p {$CIV_INSTALL_FOLDER/scripts,$CIV_INSTALL_FOLDER/sof_audio}"
	run_as_root "cp $CIV_WORK_DIR/scripts/* $CIV_INSTALL_FOLDER/scripts/"
#	run_as_root "chmod +x $CIV_INSTALL_FOLDER/scripts/*.sh"
	run_as_root "mv -t $CIV_INSTALL_FOLDER/sof_audio $CIV_WORK_DIR/scripts/sof_audio/configure_sof.sh $CIV_WORK_DIR/scripts/sof_audio/blacklist-dsp.conf"
	run_as_root "cp $CIV_WORK_DIR/scripts/guest_pm_control $CIV_INSTALL_FOLDER/scripts"
	run_as_root "cp $CIV_WORK_DIR/scripts/findall.py $CIV_INSTALL_FOLDER/scripts"
	run_as_root "cp $CIV_WORK_DIR/scripts/thermsys $CIV_INSTALL_FOLDER/scripts"
	run_as_root "cp $CIV_WORK_DIR/scripts/batsys $CIV_INSTALL_FOLDER/scripts"
	run_as_root "chmod +x $CIV_INSTALL_FOLDER/scripts/*.sh"
}

function save_env_deleteme(){
	if [ -z "$a" ]; then
		echo "export CIV_WORK_DIR=$(pwd)" | tee -a /etc/environment
	else
		sed -i "s|export CIV_WORK_DIR.*||g" /etc/environment
		echo "export CIV_WORK_DIR=$(pwd)" | tee -a /etc/environment
	fi
}

function ubu_thermal_conf (){

	systemctl stop thermald.service
	run_as_root "cp $CIV_INSTALL_FOLDER/scripts/intel-thermal-conf.xml /etc/thermald"
	run_as_root "cp $CIV_INSTALL_FOLDER/scripts/thermald.service  /lib/systemd/system"
	run_as_root "systemctl daemon-reload"
  run_as_root "systemctl start thermald.service"
}


	
function prep_civ() {
	if [[ $1 == "--gvtd" ]]; then
		systemctl set-default multi-user.target
	fi
	if [[ ! -d $CIV_WORK_DIR/sof_audio ]]; then
		reboot_required=1
	fi
	prepare_required_scripts
	
	
	$CIV_INSTALL_FOLDER/sof_audio/configure_sof.sh "install" $CIV_INSTALL_FOLDER
	$CIV_INSTALL_FOLDER/scripts/setup_audio_host.sh
	#starting Intel Thermal Deamon, currently supporting CML/EHL only.
	ubu_thermal_conf
	install_9p_module

  rerurn

#	ask_reboot

}

# Flash qcow2 file
function build_android_qcow() {
  cd $builddir/civ

  echo "calling start_flash_usb.sh"
  sudo ./scripts/start_flash_usb.sh caas-flashfiles-QMm000000.zip --display-off
}

# Start CIV
function start_android() {
  cd $builddir/civ

  sudo -E ./scripts/start_android_qcow2.sh --display-off
}


gfx_device="/sys/bus/pci/devices/0000:00:02.0"
INSTALL_GUEST="$vmdir/scripts/install-guest"
TEMP_FILE="./temp"
function build_startup_file(){
  vgpu=$1
  low_vgpu="$( echo $vgpu | tr '[:upper:]' '[:lower:]' )"

  unset str
  
  str+=( "#!/bin/bash -x" )
  str+=( "# This file is auto generated by IDV setup.sh file." )
  str+=( "/usr/bin/qemu-system-x86_64 \\" )
  str+=( "-m 2048 -smp 2 -M q35 \\" )
  str+=( "-name caas-vm \\" )
  str+=( "-drive file=./OVMF.fd,format=raw,if=pflash \\" )
  
  str+=( "-enable-kvm \\" )
  str+=( "-vga none \\" )
  str+=( "-display none \\" )
  str+=( "-k en-us \\" )
  str+=( "-global ICH9-LPC.disable_s3=0 -global ICH9-LPC.disable_s4=1 \\" )
  str+=( "-global PIIX4_PM.disable_s3=0 -global PIIX4_PM.disable_s4=1 \\" )
  str+=( "-cpu host \\" )
  str+=( "-gmp stdio \\" )
  str+=( "-machine kernel_irqchip=off \\" )
  str+=( "-pidfile android_vm.pid \\" )
  str+=( "-device intel-hda \\" )
  str+=( "-device hda-duplex \\" )
  str+=( "-audiodev id=android_spk,timer-period=5000,server=/run/user/1000/pulse/native,driver=pa \\" )
  str+=( "-device e1000,netdev=net0 -netdev user,id=net0,hostfwd=tcp::5555-:5555,hostfwd=tcp::5554-:5554 \\" )
  str+=( "-device qemu-xhci,id=xhci,addr=0x8 -device usb-host,vendorid=0x03eb,productid=0x8a6e \\" )
  str+=( "-device usb-host,vendorid=0x0eef,productid=0x7200 \\" )
  str+=( "-device usb-host,vendorid=0x222a,productid=0x0141 \\" )
  str+=( "-device usb-host,vendorid=0x222a,productid=0x0088 \\" )
  str+=( "-device usb-host,vendorid=0x8087,productid=0x0a2b \\" )
  str+=( "-device usb-mouse \\" )
  str+=( "-device usb-kbd \\" )
  str+=( "-chardev socket,id=charserial0,path=./kernel-console,server,nowait \\" )
  str+=( "-device isa-serial,chardev=charserial0,id=serial0 \\" )
  str+=( "-drive file=/home/snuc/idv/build/civ/android.qcow2,if=none,id=disk1 \\" )
  str+=( "-device virtio-blk-pci,drive=disk1,bootindex=1 \\" )
  str+=( "-device vhost-vsock-pci,id=vhost-vsock-pci0,guest-cid=3 \\" )
  str+=( "-device intel-iommu,device-iotlb=off,caching-mode=on \\" )
  str+=( "-full-screen -fsdev local,security_model=none,id=fsdev0,path=/var/vm/civ/share_folder \\" )
  str+=( "-device virtio-9p-pci,fsdev=fsdev0,mount_tag=hostshare \\" )
  str+=( "-smbios type=2,serial=BTKY8490051D -nodefaults \\" )

  vgpu_guid=($(grep "^$vgpu" $idv_config_file))
  str+=( "-device vfio-pci-nohotplug,ramfb=off,sysfsdev=$gfx_device/${vgpu_guid#*=},display=off,x-igd-opregion=on" )

  printf "Creating start-android-$low_vgpu.sh file.. "
  #printf "%s\n"  "${str[@]}" | run_as_root "tee -a $INSTALL_GUEST-$low_vgpu.sh"
  printf "%s\n"  "${str[@]}" | tee -a $vmdir/script/start-android-$low_vgpu.sh
#  printf "%s\n"  "${str[@]}" > $TEMP_FILE
}

# uncomment all below after testing

pull_scripts
prep_civ

echo "before calling build_android_qcow"
build_android_qcow

# to use the CIV released startup file
#start_android

# to use modified startup build for IDV environment
build_startup_file VGPU1

